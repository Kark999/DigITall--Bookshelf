{"version":3,"file":"commonHelpers.js","sources":["../src/js/createTopSellers.js","../src/js/createCategoryList.js","../src/js/showHideFn.js","../src/js/workInLS.js","../src/js/cartPagination.js","../src/js/shoppingListHandler.js","../src/main.js"],"sourcesContent":["import {\n  createCategoryMarkup,\n  createBookMarkup,\n  createButton,\n  renderContent,\n} from './createMarkups';\nimport { fetchData, endPoints } from './fetchData';\nimport { createAndOpenModalWindow } from './modal';\nimport { refs } from './refs';\n\nfunction createTopSellers(data) {\n  return data\n    .map(x => {\n      const strArr = x.list_name.split(' ');\n      strArr[strArr.length - 1] = `<span>${strArr[strArr.length - 1]}</span>`;\n      const title = `<h2 class=\"category-title\">${strArr.join(' ')}</h2>`;\n      const catMarkup = createCategoryMarkup(x.books, createBookMarkup);\n      const button = createButton('see-more-button', 'See more', x.list_name);\n      return title + catMarkup + button;\n    })\n    .join('');\n}\n\nexport async function renderTopSellers() {\n  const topBookData = await fetchData(endPoints.topbooks);\n  const topBooksMarkup = createTopSellers(topBookData);\n  renderContent(refs.mainCatWrap, topBooksMarkup, createAndOpenModalWindow);\n}\n","import { refs } from './refs';\nimport { fetchData } from './fetchData';\nimport { endPoints } from './fetchData';\nimport { createAndOpenModalWindow } from './modal';\nimport {\n  createCategoryMarkup,\n  createBookMarkup,\n  renderContent,\n} from './createMarkups';\nimport { renderTopSellers } from './createTopSellers';\n\ncatList();\n\nrefs.catList.addEventListener('click', onCatClick);\n\nasync function catList() {\n  const catListData = await fetchData(endPoints.list);\n  const catListMarkup = createCategoryList(catListData);\n  renderContent(refs.catList, catListMarkup);\n}\n\nfunction createCategoryList(data) {\n  const titleMarkup = `<li class=\"sidebar-category-item\"><p class=\"sidebar-category-text make-blue\">All categories</p></li>`;\n  const itemsMarkup = data\n    .map(\n      item =>\n        `<li class=\"sidebar-category-item\" data-category=\"${item.list_name}\"><p class=\"sidebar-category-text\" data-category=\"${item.list_name}\">${item.list_name}</p></li>`\n    )\n    .join('');\n  const mainMarkup = titleMarkup + itemsMarkup;\n  return mainMarkup;\n}\n\nfunction linkIsActive(e) {\n  if (e.target.nodeName === 'LI') {\n    const arrayElem = e.target.parentElement.querySelectorAll(\n      '.sidebar-category-text'\n    );\n    arrayElem.forEach(item => {\n      item.classList.remove('make-blue');\n    });\n    e.target.firstElementChild.classList.add('make-blue');\n  } else if (e.target.nodeName === 'P') {\n    const arrayElem = e.target.parentElement.parentElement.querySelectorAll(\n      '.sidebar-category-text'\n    );\n    arrayElem.forEach(item => {\n      item.classList.remove('make-blue');\n    });\n    e.target.classList.add('make-blue');\n  }\n}\n\nasync function onCatClick(e) {\n  if (e.target === e.currentTarget) return;\n  if (!e.target.dataset.category) {\n    linkIsActive(e);\n    renderTopSellers();\n    return;\n  }\n  linkIsActive(e);\n  const strArr = e.target.dataset.category.split(' ');\n  strArr[strArr.length - 1] = `<span>${strArr[strArr.length - 1]}</span>`;\n  refs.mainTitle.innerHTML = strArr.join(' ');\n\n  const selectedCatData = await fetchData(\n    endPoints.category,\n    e.target.dataset.category\n  );\n  const selectedCatMarkup = createCategoryMarkup(\n    selectedCatData,\n    createBookMarkup\n  );\n  renderContent(refs.mainCatWrap, selectedCatMarkup, createAndOpenModalWindow);\n  const catBooks = document.querySelectorAll('.main-category-item');\n  catBooks.forEach(x => showElement(x));\n}\n","export function showElement(elem) {\n  elem.classList.add('visible');\n  elem.classList.remove('hidden');\n}\n\nexport function hideElement(elem) {\n  elem.classList.remove('visible');\n  elem.classList.add('hidden');\n}\n","const prefixKey = ''; // Prefix is needed to make your keys unique in LS,  as another library may have the same key\n\nexport const getLS = key => {\n  try {\n    const lsValue = localStorage.getItem(\n      `${prefixKey ? `${prefixKey}_` : ''}${key}`\n    );\n    if (lsValue) {\n      return JSON.parse(lsValue);\n    }\n    throw new Error(`I do not find ${prefixKey ? `${prefixKey}_` : ''}${key}`);\n  } catch (error) {\n    console.warn('[getLS]: ', error);\n    return null;\n  }\n};\n\n// const cart = getLS(\"cart\");\n\nexport const setLS = (key, value) => {\n  try {\n    value === null\n      ? localStorage.removeItem(`${prefixKey ? `${prefixKey}_` : ''}${key}`)\n      : localStorage.setItem(\n          `${prefixKey ? `${prefixKey}_` : ''}${key}`,\n          JSON.stringify(value)\n        );\n  } catch (error) {\n    console.warn('[setLS]: ', error);\n    return null;\n  }\n};\n\n// ===== end work in localeStorage ===== //\n","import { getLS } from './workInLS';\n\nconst store = {\n  offset: 0,\n  count: 3,\n};\n\nexport const getActualCards = () => {\n  const cards = getLS('cart') || [];\n  if (!cards?.length) return [];\n\n  return cards.slice(store.offset, store.offset + store.count);\n};\n\nexport const getCardsByPage = page => {\n  const cards = getLS('cart');\n\n  if (!cards?.length) return [];\n\n  const currentOffset = page * store.count;\n\n  const length = cards.length;\n\n  offset =\n    currentOffset + store.count >= length\n      ? length - store.count\n      : currentOffset + 1;\n\n  return getActualCards();\n};\n","import { getLS, setLS } from './workInLS';\nimport amazon from '../img/png/amazon.png';\nimport apple from '../img/png/apple-book.png';\nimport { createCategoryMarkup } from './createMarkups';\nimport { getActualCards } from './cartPagination';\n\nexport const makeDeleteCardFromLSHandler = domElement => id => {\n  const cart = getLS('cart');\n  const newCart = cart.filter(book => book._id !== id);\n  setLS('cart', newCart.length > 0 ? newCart : null);\n  renderContent(domElement, getActualCards(newCart));\n};\n\nconst createCardsMarkup = book => {\n  return `<li class=\"cart-item-glow cart-item\">\n          <img class=\"cart-image\" src=\"${book.book_image}\"/>\n          <div class=\"cart-book-section\">\n            <h3 class=\"cart-book-title\">${book.title}</h3>\n            <button class=\"cart-remove-book-btn\" onclick=\"window.deleteCardFromLSHandler('${book._id}')\">\n              <span class=\"cart-trash\">\n                <span></span>\n                <i></i>\n              </span>\n            </button>\n            <p class=\"cart-book-category\">${book.list_name}</p>\n            <p class=\"cart-book-description\">\n             ${book.description}\n            </p>\n\n            <p class=\"cart-book-autor\">${book.author}</p>\n            <div class=\"cart-book-links\">\n              <a href=${book.buy_links[0].url} class=\"cart-amazon cart-amazon-dark\">\n                <img src=${amazon} alt=${book.buy_links[0].name} />\n              </a>\n              <a\n                href=${book.buy_links[1].url}\n                class=\"cart-apple-books cart-apple-books-dark\"\n              >\n                <img src=${apple} alt=${book.buy_links[1].name} />\n              </a>\n            </div>\n          </div>\n        </li>`;\n};\n\nconst createEmptyCartMarkup = () => {\n  return `<li class=\"cart-background\">\n        <p class=\"cart-background-text\">\n          This page is empty, add some books and proceed to order.\n        </p>\n        <img class=\"cart-bg-img\" src=\"../img/png/cart-background.png\" />\n      </li>`;\n};\n\nconst renderContent = (domElement, cart) => {\n  if (!cart?.length) {\n    domElement.innerHTML = createCategoryMarkup([''], createEmptyCartMarkup);\n    return;\n  }\n  domElement.innerHTML = createCategoryMarkup(cart, createCardsMarkup);\n};\n\nexport const renderCart = domElement => {\n  const cart = getLS('cart');\n  renderContent(domElement, getActualCards(cart));\n};\n","import './js/enableDarkTheme';\nimport './js/autorization';\nimport './js/donation-list';\nimport './js/createCategoryList';\nimport { fetchData, endPoints } from './js/fetchData';\nimport {\n  createBookMarkup,\n  createCategoryMarkup,\n  renderContent,\n} from './js/createMarkups';\nimport { createAndOpenModalWindow } from './js/modal';\nimport { renderTopSellers } from './js/createTopSellers';\nimport { showElement, hideElement } from './js/showHideFn';\nimport { refs } from './js/refs';\nimport {\n  renderCart,\n  makeDeleteCardFromLSHandler,\n} from './js/shoppingListHandler';\n\nrenderTopSellers();\nrefs.mainCatWrap.addEventListener('click', onMoreButtonClick);\n\nasync function onMoreButtonClick(e) {\n  if (!e.target.dataset.category) return;\n\n  const strArr = e.target.dataset.category.split(' ');\n  strArr[strArr.length - 1] = `<span>${strArr[strArr.length - 1]}</span>`;\n  refs.mainTitle.innerHTML = strArr.join(' ');\n\n  const selectedCatData = await fetchData(\n    endPoints.category,\n    e.target.dataset.category\n  );\n\n  const selectedCatMarkup = createCategoryMarkup(\n    selectedCatData,\n    createBookMarkup\n  );\n\n  renderContent(refs.mainCatWrap, selectedCatMarkup, createAndOpenModalWindow);\n  const catBooks = document.querySelectorAll('.main-category-item');\n  catBooks.forEach(x => showElement(x));\n}\nrefs.shoppingListBtn.addEventListener('click', e => {\n  e.preventDefault();\n  e.stopPropagation();\n\n  refs.mainTitle.innerHTML = `Shopping <span>List</span>`;\n  renderCart(refs.mainCatWrap);\n  window.deleteCardFromLSHandler = makeDeleteCardFromLSHandler(\n    refs.mainCatWrap\n  );\n});"],"names":["createTopSellers","data","x","strArr","title","catMarkup","createCategoryMarkup","createBookMarkup","button","createButton","renderTopSellers","topBookData","fetchData","endPoints","topBooksMarkup","renderContent","refs","createAndOpenModalWindow","catList","onCatClick","catListData","catListMarkup","createCategoryList","titleMarkup","itemsMarkup","item","linkIsActive","e","selectedCatData","selectedCatMarkup","showElement","elem","prefixKey","getLS","key","lsValue","error","setLS","value","store","getActualCards","cards","makeDeleteCardFromLSHandler","domElement","id","newCart","book","createCardsMarkup","amazon","apple","createEmptyCartMarkup","cart","renderCart","onMoreButtonClick"],"mappings":"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"}